//
//                ~~~~   Объеты  ~~~~
//  что такое объекты и для чего они нужны ?
//  варианты создания объекта (синтаксис) ?
//   let obj = {'hello','world',"likes birds": true  }
//   достаньте значение "likes birds"   let likesBirds =    obj
//   чему равно obj.hello ?
//
//   какие есть ограничения на значение ключа объекта?
//   можно ли так задать значение объекту ? ?
//   let obj = {true}
//   выведите все значиния и ключи в console.log (for....)
//     let obj = {name:'Святослав',age:25}
//
//
//   есть ли последовательность вывода данных в объекте? *




//                 ~~~~  Массивы  ~~~~~
// для чего нужны массивы?
// варианты создания массива?
//
//  какие методы более затратные (быстрее выполняются): push,pop,unshift,shift ?
//
//  можно ли так использовать методы?
// let Arr = [] ,
//  arr.push('audi','bmw')  что выведется на экран?
//  arr.shift('audi','bmw')  что выведется на экран?
//  что такое многомерные массивы?  *
//  let Arr = [],
//  Arr +=1  чему будет равен Arr ? *
//  let arr[100].length  чему равно? *
//
//               ~~~~   function  ~~~~
//   метода объявления функций. в чем отличие (из работы) ?
//
//         -- Динамическая функция --
// ______________________________________________________________
//   let age = prompt("Сколько Вам лет?", 18);
//
//   let welcome = (age < 18) ?
//      () => alert('Привет') :
//      () => alert("Здравствуйте!");
//
//   welcome(); // теперь всё в порядке
// _____________________________________________________________
//
//
//
//
//              ~~~~   For & While  ~~~~
//  как прервать цыклы (Директива) ?
//  Директива к следующей итерации ?
//  let arr = [1,11,123,22,221,33,335,77,777]
//  отсортируйте массив по возрастанию ( bubble sort || analog )
//
//              ~~ Область видимости переменных ~~
//  расскажите
//  в чем отличие var от let , const ?
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
////
// //
// //
// //
// //
// //
// //
// //
// //
// //
// //
// ////
// //
// //
// //
// //
// //
// //
// //
// //
// //
// //
// ////
// //
// //
// //
// //
// //
// //
// //
// //
// //
// //
// ////
// //
// //
// //
// //
// //
// //
// //
// //
// //
// //
// ////
// //
// //
// //
// //
// //
// //
// //
// //
// //
// //
// //





